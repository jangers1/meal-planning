/* ===========================
   DND SHARED STYLES
   =========================== */

/* CSS Custom Property for animated progress */
@property --progress {
    syntax: "<number>";
    initial-value: 0;
    inherits: false;
}

/* ===========================
   DRAGGABLE BASE WRAPPER
   =========================== */
.dnd-draggable-wrapper {
    display: block; /* Fill grid/flex cell width */
    width: 100%;
}

.dnd-draggable-wrapper.dragging {
    z-index: 1;
}

/* Apply to direct children of draggable wrapper */
.dnd-draggable-wrapper > * {
    cursor: grab;
    touch-action: none;
    user-select: none;
    transform: scale(var(--scale, 1));
    box-shadow: var(--box-shadow, 0 2px 4px rgba(0, 0, 0, 0.1));
    transition: box-shadow 120ms ease-out; /* snappier shadow */
    /* Ensure child fills wrapper */
    width: 100%;
    max-width: none;
    /* Hint the compositor for smoother animations */
    will-change: transform, box-shadow;
}

.dnd-draggable-wrapper > *:active {
    cursor: grabbing;
}

/* Active dragging state - hide original and set CSS vars */
.dnd-draggable-wrapper.dragging > * {
    --scale: 1.06;
    --box-shadow: -1px 0 15px 0 rgba(34, 33, 81, 0.01), 0px 15px 15px 0 rgba(34, 33, 81, 0.25);
    opacity: 0;
    cursor: grabbing;
}

/* Pending delay state with progress animation */
.dnd-draggable-wrapper.pending-delay > * {
    animation: dnd-pending-progress linear;
    animation-duration: var(--animation-duration, 500ms);
    background-image: linear-gradient(
        90deg,
        #f00d calc(var(--progress) * 1%),
        transparent calc(var(--progress) * 1% + 1%)
    );
}

/* ===========================
   DRAG OVERLAY
   =========================== */
.dnd-overlay-wrapper {
    display: block;
}

.dnd-overlay-element {
    cursor: grabbing !important;
    /* Respect measured width/height and avoid collapsing */
    display: block;
    box-sizing: border-box;
    /* Smoothly animate width changes when adjusting to slot size */
    transition: width 120ms ease-out;
}

/* Apply animation and styles to overlay children */
.dnd-overlay-element > * {
    --scale: 1.06;
    --box-shadow: -1px 0 15px 0 rgba(34, 33, 81, 0.01), 0px 15px 15px 0 rgba(34, 33, 81, 0.25);
    animation: dnd-pop 150ms ease-out; /* snappy pickup */
    transform: scale(var(--scale));
    box-shadow: var(--box-shadow);
    /* Ensure child fills the overlay's measured box */
    width: 100%;
    max-width: none;
    /* Optimize overlay animation */
    will-change: transform, box-shadow;
    backface-visibility: hidden;
}

.dnd-overlay-element * {
    cursor: grabbing !important;
}

/* ===========================
   DROPPABLE ZONES
   =========================== */
.dnd-droppable-zone {
    transition: background-color 120ms ease-out;
}

.dnd-droppable-zone.over {
    background-color: rgba(76, 175, 80, 0.15);
    box-shadow: inset 0 0 0 2px rgba(76, 175, 80, 0.5);
}

/* ===========================
   ANIMATIONS
   =========================== */

/* Pop animation for pickup - scales element up */
@keyframes dnd-pop {
    0% {
        transform: scale(1);
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
    100% {
        transform: scale(var(--scale));
        box-shadow: var(--box-shadow);
    }
}

/* Progress animation for activation delay */
@keyframes dnd-pending-progress {
    0% {
        --progress: 0;
    }
    100% {
        --progress: 100;
    }
}
